<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use PHPExcel;
use PHPExcel_IOFactory;

class ExcelController extends Controller
{

    public $excel_table = [];
    public $tmpfname;
    public $file_name = 'static.xls';

    public function excel(Request $request)
    {

        $file = $request->file('excel');
        $file->move('excel/', $file->getClientOriginalName());
        $this->tmpfname = 'excel/' . $file->getClientOriginalName();

        $excelReader = PHPExcel_IOFactory::createReaderForFile($this->tmpfname);
        $excelObj = $excelReader->load($this->tmpfname);
        $worksheet = $excelObj->getSheet(0);
        $lastRow = $worksheet->getHighestRow();
        $array_user_data = [];
        for ($row = 2; $row <= $lastRow; $row++) {
            $array_user_data[$worksheet->getCell('C'.$row)->getValue()][] = [
                 'id' => $worksheet->getCell('B'.$row)->getValue(),
                 'date' => $worksheet->getCell('G'.$row)->getValue(),
                 'time' => $worksheet->getCell('H'.$row)->getValue(),
                 'print' => $worksheet->getCell('I'.$row)->getValue(),
             ];
        }

        $objPHPExcel = new PHPExcel();

        foreach ($array_user_data as $user => $data){
           $this->createExcel($user, $data, $objPHPExcel);
        }

        $this->createTotal($objPHPExcel);

        foreach ($objPHPExcel->getWorksheetIterator() as $worksheet) {

            $objPHPExcel->setActiveSheetIndex($objPHPExcel->getIndex($worksheet));

            $sheet = $objPHPExcel->getActiveSheet();
            $cellIterator = $sheet->getRowIterator()->current()->getCellIterator();
            $cellIterator->setIterateOnlyExistingCells(true);

            foreach ($cellIterator as $cell) {
                $sheet->getColumnDimension($cell->getColumn())->setAutoSize(true);
            }
        }

        $objPHPExcel->setActiveSheetIndex(0);

        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save($this->file_name);
        unlink($this->tmpfname);
    }


    public function createExcel($user_name, $items, $objPHPExcel){


        $date = [];

        foreach($items as $item){
            $date[$item['date']]['times'][] = $item['time'];
        }

        $total_time = 0;
        $total_late = 0;
        $total_print = 0;
        $total_miss_day = 0;

        $late_time = strtotime('09:00:00');

        $i = 2;



        $objPHPExcel->getActiveSheet();
        $objWorkSheet = $objPHPExcel->createSheet();
        $objWorkSheet->setTitle($user_name);


        $this->createRow('1', 'Days', 'Late', 'Missing', 'Print', 'Deviation', '', $objWorkSheet);


        $get_time = strtotime('previous month');
        $month =  date('m', $get_time);
        $start_month = date('Y-m', $get_time). '-01';
        $myTime = strtotime($start_month);
        $daysInMonth = cal_days_in_month(CAL_GREGORIAN, $month, date('Y'));


        while($daysInMonth > 0)
        {
            $day = date("D", $myTime);
            $checked_work_day = date('Y-m-d', $myTime);

            if($day != "Sun" && $day != "Sat"){

                if(array_key_exists($checked_work_day, $date)){
                    $user = $date[$checked_work_day];
                    if(sizeof($user['times']) >= 2){
                        $start = array_shift($user['times']);
                        $end = array_pop($user['times']);
                        $different = date('H:i:s',  strtotime($end) -  strtotime($start));

                        if($start > '09:10' && $start < '09:50'){
                            $late = 'Late to 9 o\'clock';
                            $total_late++;
                        }else if($start > '10:10' && $start < '10:50'){
                            $late = 'Late to 10 o\'clock';
                            $total_late++;
                        }else if($start < '09:10'){
                            $late = 'In time';
                        }else if($start > '10:51'){
                            $late = 'Late after 10:51';
                            $total_late++;
                        }else{
                            $late = 'In time';
                        }

                        if($different < '09:00:00'){

                            $total_time += $late_time - strtotime($different);
                        }

                        $this->createRow($i, $checked_work_day, $late, '', '', $different, '', $objWorkSheet);

                    }else{
                        $total_print++;

                        $this->createRow($i, $checked_work_day, '', '', 'Miss fingerprint', '', '', $objWorkSheet);

                    }
                }else{
                    $total_miss_day++;
                    $this->createRow($i, $checked_work_day, '', 'Miss day', '', '', '', $objWorkSheet);
                }

            }else{
                $this->createRow($i, $checked_work_day, '', '', 'holiday', '', '', $objWorkSheet);
            }

            $i++;
            $daysInMonth--;
            $myTime += 86400;
        }


        $this->createRow($i, 'Total', $total_late, $total_miss_day, $total_print, date('H:i:s', $total_time), '', $objWorkSheet);


        $this->excel_table[] = [
            'name' => $user_name,
            'late' => $total_late,
            'absent' => $total_miss_day,
            'fingerprint_miss' => $total_print,
            'time_late' => date('H:i:s', $total_time), ''
        ];
    }

    public function createTotal($objPHPExcel)
    {
        $objPHPExcel->getActiveSheet();
        $objWorkSheet = $objPHPExcel->getSheet(0);
        $objWorkSheet->setTitle('Total');

        $this->createRow('1', 'Name', 'Late', 'Missing', 'Print', 'Deviation', 'Link', $objWorkSheet);

        $i = 2;
        foreach($this->excel_table as $info){

            $this->createRow($i, $info['name'], $info['late'], $info['absent'], $info['fingerprint_miss'], $info['time_late'], $info['name'], $objWorkSheet);

            $objPHPExcel->getActiveSheet()
                        ->getCell('F' . $i)
                        ->getHyperlink()
                        ->setUrl("sheet://'".$info['name']."'!A1");
            $i++;
        }

    }

    public function createRow($number, $days, $late, $missing, $print, $deviation, $link, $objWorkSheet)
    {
        $objWorkSheet->setCellValue('A' . $number, $days)
                     ->setCellValue('B' . $number, $late)
                     ->setCellValue('C' . $number, $missing)
                     ->setCellValue('D' . $number, $print)
                     ->setCellValue('E' . $number, $deviation)
                     ->setCellValue('F' . $number, $link);
    }

    public function download()
    {
        header('Content-Description: File Transfer');
        header('Content-Type: application/octet-stream');
        header('Content-Disposition: attachment; filename="'.basename($this->file_name).'"');
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($this->file_name));
        readfile($this->file_name);
        unlink($this->file_name);
    }
}
